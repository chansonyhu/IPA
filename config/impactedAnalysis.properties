# ----------------------------------------------------------------------
# This configuration file uses the Adjustable-Block Encoding CPA
# for predicate analysis with CEGAR as described in
# "Predicate Abstraction with Adjustable-Block Encoding" (Beyer et al.).
# It is configured to support ABE with LBE-like blocks
# (abstractions at loop heads and function entries/exists).
# ----------------------------------------------------------------------

# ----------------------------------------------------------------------
# This configuration file uses the Adjustable-Block Encoding CPA
# for predicate analysis with CEGAR as described in
# "Predicate Abstraction with Adjustable-Block Encoding" (Beyer et.al.).
# ----------------------------------------------------------------------

output.disable = true
# ARGCPA is necessary for refinement and has to be the top-level CPA
cpa = cpa.arg.ARGCPA
ARGCPA.cpa = cpa.composite.CompositeCPA

CompositeCPA.cpas = cpa.location.LocationCPA, cpa.callstack.CallstackCPA, cpa.functionpointer.FunctionPointerCPA, cpa.impacted.ImpactedCPA

# CFACreator.java
analysis.useGlobalVars = true
cfa.useMultiEdges = false
cfa.removeIrrelevantForSpecification = false

cfa.transformIntoSingleLoop = false
cfa.simplifyCfa = true

cfa.moveDeclarationsToFunctionStart = false

# reduce output file
cfa.callgraph.export = false
cfa.exportPerFunction = false
cfa.export = false

# ARGStatistics.java
cpa.arg.export = false

# InvariantsWriter.java
cpa.impacted.invariants.disjunction = true

# CPAchecker.java
# analysis.unknownAsTrue = false

log.consoleLevel = SEVERE

# CmdLineArguments.java
analysis.summaryEdges = true
cpa.callstack.skipRecursion = true

analysis.traversal.order = BFS
